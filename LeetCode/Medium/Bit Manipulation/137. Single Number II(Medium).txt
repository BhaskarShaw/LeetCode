Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,3,2]
Output: 3
Example 2:

Input: nums = [0,1,0,1,0,1,99]
Output: 99

ANSWER :

class Solution {
    public int singleNumber(int[] nums) {
        
        int[] arr = new int[32];
        for(int i=0; i<32; i++)
        {
            for(int j : nums)
            {
                if((j & (1<<i)) != 0)
                    arr[i]++;
            }
        }
        int one_num = 0;
        for(int i=0; i<32; i++)
        {
            one_num += (arr[i]%3) << i;
        }
        return one_num;
        
    }
}